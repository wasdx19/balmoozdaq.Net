// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using balmoozdaq.Data;

namespace balmoozdaq.Migrations
{
    [DbContext(typeof(BalmoozdaqContext))]
    [Migration("20191108215400_smth")]
    partial class smth
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("balmoozdaq.Models.CenterCourse", b =>
                {
                    b.Property<int>("EduCenterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CenterCourseDesc")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EducationCenterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("EduCenterId", "CourseId", "UserId");

                    b.HasAlternateKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("CenterCourses");
                });

            modelBuilder.Entity("balmoozdaq.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CourseName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("balmoozdaq.Models.CourseTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CourseEndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("CourseStartTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("WeekDayId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WeekDayId");

                    b.ToTable("CourseTimes");
                });

            modelBuilder.Entity("balmoozdaq.Models.EducationCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EduCenterAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("EduCenterDesc")
                        .HasColumnType("TEXT");

                    b.Property<string>("EduCenterImgUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("EduCenterName")
                        .HasColumnType("TEXT");

                    b.Property<string>("EduCenterPhone")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("EducationCenters");
                });

            modelBuilder.Entity("balmoozdaq.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("balmoozdaq.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserLogin")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserPassword")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserSurname")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("balmoozdaq.Models.WeekDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CenterCourseCourseId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CenterCourseEduCenterId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CenterCourseUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DayName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CenterCourseEduCenterId", "CenterCourseCourseId", "CenterCourseUserId");

                    b.ToTable("WeekDays");
                });

            modelBuilder.Entity("balmoozdaq.Models.CenterCourse", b =>
                {
                    b.HasOne("balmoozdaq.Models.Course", "Course")
                        .WithMany("CenterCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("balmoozdaq.Models.EducationCenter", "EducationCenter")
                        .WithMany("CenterCourses")
                        .HasForeignKey("EduCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("balmoozdaq.Models.User", "User")
                        .WithMany("CenterCourses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("balmoozdaq.Models.CourseTime", b =>
                {
                    b.HasOne("balmoozdaq.Models.WeekDay", "WeekDay")
                        .WithMany("CourseTimes")
                        .HasForeignKey("WeekDayId");
                });

            modelBuilder.Entity("balmoozdaq.Models.EducationCenter", b =>
                {
                    b.HasOne("balmoozdaq.Models.User", "User")
                        .WithOne("EducationCenter")
                        .HasForeignKey("balmoozdaq.Models.EducationCenter", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("balmoozdaq.Models.User", b =>
                {
                    b.HasOne("balmoozdaq.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("balmoozdaq.Models.WeekDay", b =>
                {
                    b.HasOne("balmoozdaq.Models.CenterCourse", "CenterCourse")
                        .WithMany("WeekDay")
                        .HasForeignKey("CenterCourseEduCenterId", "CenterCourseCourseId", "CenterCourseUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
